{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww19220\viewh23980\viewkind0
\deftab560
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl1
\f0\fs26 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \uc0\u8232 \u8232 Overall Directory Structure Diagram\u8232 \u8232 TradeBot-001/\
|-- .env                                	# Environment variables for log-in, API keys, account info, and encryption keys\
|-- .scpignore                          	# Local only - not uploaded\
|-- encrypt_password.py         	# Local only - not uploaded - for encrypting passwords\
|-- generate_key.py                	# Local only - not uploaded - for generating encryption keys\
|-- requirements.txt         		# Ensure all dependencies are installed\
|\
|-- tbot_api/                           	# API for managing tbot_bot and interacting with web\
|   |-- __init__.py                     	 # (Suggested) Makes this directory a module\
|   |-- env_api.py                           	# (Suggested) For loading environment variables\
|   |-- logs_api.py                          	# Handles logging of API events (error logs, info logs, etc.)\
|   |-- main_api.py                         	 # Main logic for tbot_api - orchestrates and manages other components\
|   |-- auth.py                           	# Handles authentication (login, password validation, encryption)\
|\
|-- tbot_bot/                           	# contains scripts for logic, making trades, analyzing market, reporting, logging and notifications\
|   |-- .env_bot                             	# Current Environment variables specific to trading bot (broker info, etc.) - modified through settings.html\
|   |-- env_bot.py                           	#  For loading environment variables -and interfacing with settings.html\
|   |-- broker_alpaca.py               	# Logic for placing trades on Alpaca (sub-broker script)\
|   |-- broker_api.py                    	# Contains logic for interacting with the broker API, and sub-broker scripts \
|   |-- broker_ibkr.py                   	# Logic for placing trades on IBKR (sub-broker script)\
|   |-- finnhub_screener.py         	# Logic for screening stocks from Finnhub\
|   |-- main_bot.py                          	# Main logic for tbot_bot - orchestrates and manages other components\
|   |-- notifier_bot.py                     	 # Sends notifications related to tbot_bot actions (trades, status)\
|   |-- orders_bot.py                        	# Manages trade orders and executions\
|   |-- risk_bot.py                          		# Risk management (calculating stop loss and trailing stop)\
|   |-- strategy_bot.py                      	# Manages trade strategy (market analysis, screening stocks)\
|   |-- reporting_bot.py                     	# Logs and tracks all trades for IRS compliance - separate from logs- pure financial data - no performance data\
|   |-- utils_bot.py                         		# Utility functions (trade logging, other helpers) ( some of this seems Redundant)\
|   |-- start_bot.py                         		# Starts the bot running - tied directly to buttons on bot-web\
|   |-- stop_bot.py                         	 	# Stops the bot running - tied directly to buttons on bot-web\
|   |-- service_bot.py                       	# Manages bot lifecycle (start/stop logic)  (seems Redundant)\
|   |-- status_bot.py                        	# Shows current bot status in status.html\
|   |-- settings_bot.py                      	# Handles bot configuration and settings between settings.html and .env_bot\
|   |-- logs_bot.py                       	       #  records trade logging, and performance logs from tbot_bot to a database or file for web display\
|\
|-- tbot_web/                           	# Web interface to control and monitor the bot\
|   |-- assets/                          	# Contains assets like icons, fonts, images, etc.\
|   |   |-- fnt/                         		# Fonts\
|   |   |-- css/                         		# Stylesheets\
|   |   |   |-- main.css                 	# Main stylesheet\
|   |   |   |-- theme.css                	# Theme stylesheet (custom theme)\
|   |-- favicon.gif\
|   |-- favicon.ico\
|   |-- index.html                       	# Login page (Handles user authentication)\
|   |-- logs.html                        	# Displays logs from the bot and API\
|   |-- main.html                        	# Main dashboard with iframe to show other pages\
|   |-- robots.txt                       	# Prevent search engine scraping\
|   |-- settings.html                    	# Allows the user to view and adjust .env_bot  settings\
|   |-- status.html                      	# Displays bot's current status\
|   |-- py/                              		# Python scripts that interface with  tbot_bot and FastAPI\
|   |   |-- login_web.py                      	# interfaces with auth.py in API for authorization (do we really need this?)\
|   |   |-- main_web.py                       	# Main logic to control web interface functionality (do we really need this?)\
|   |   |-- logs_web.py                      	         # Shows bot logs on logs.html from database file.\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 |   |   |-- start_stop_web.py                     # Interfaces start and stop web buttons with tbot_bot  (seems Redundant)\
|   |   |-- status_web.py                       	# Shows current bot status in status.html (seems Redundant)\
}